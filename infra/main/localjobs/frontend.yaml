apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: localjobs-main
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: registry.tingting.com/tingting/localjobs/frontend:main-live
          imagePullPolicy: Always
          ports:
            - containerPort: 4200
          # resources:
          #   requests:
          #     memory: 250M
          #     cpu: 250
          #   limits:
          #     memory: 1G
          #     cpu: 500
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: localjobs-main
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 4200
      targetPort: 4200
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: localjobs-main
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,signmessage,signchain,signaddress,geolocation,apollo-require-preflight"
spec:
  tls:
    - hosts:
        - localjobs.tingting.com
        # - meta.moss.land
      secretName: web-devbox-kr-cert-localjobs.tingting.com
  rules:
    - host: localjobs.tingting.com
      http:
        paths:
          - path: /backend/
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8080
          - path: /socket.io/
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 4200
    # - host: meta.moss.land
    #   http:
    #     paths:
    #       - path: /backend/
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: backend-service
    #             port:
    #               number: 8080
    #       - path: /socket.io/
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: backend-service
    #             port:
    #               number: 8080
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: frontend-service
    #             port:
    #               number: 4200
